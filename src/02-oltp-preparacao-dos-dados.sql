



/*======================================================================
|																		|
|	AUTOR		- Sergio Goncalves										|							
|	DATA		- 19/12/23												|						
|	DESCRICAO	- TRANSFORMAÇÃO , MINERAÇÃO E NORMALIZAÇÃO DOS DADOS	|
|																		|
=======================================================================*/







--- Observando duplicidades  < 0 registros duplicados encontrados >


			SELECT		COUNT(*)		AS COUNTLINHA,
						A.QTD_REGISTROS
			FROM	(
					SELECT *, COUNT(*) AS QTD_REGISTROS
					FROM [OLTP].[TABE_EXTR_SUPERSTORE]
					GROUP BY [Row_ID],[Order_ID],[Order_Date],[Ship_Date],[Ship_Mode],[Customer_ID],[Customer_Name],[Segment],[Country],[City],[State],[Postal_Code],[Region],[Product_ID],[Product_ID],[Product_ID],[Product_ID],[Category],[Sub_Category],[Product_Name],[Sales],[Quantity],[Discount],[Profit]
					) A
			WHERE A.QTD_REGISTROS > 1 
			GROUP BY A.QTD_REGISTROS

			GO		

			--- Corrigindo um SKU errado de cliente


			--SELECT  * FROM OLTP.TABE_EXTR_SUPERSTORE
			--WHERE CUSTOMER_ID =  'Co-12640'

			--UPDATE OLTP.TABE_EXTR_SUPERSTORE
			--SET CUSTOMER_ID = 'CL-12640', Customer_Name = 'Corey Lock'
			--WHERE CUSTOMER_ID =  'Co-12640'

			--GO		



--- DEPARA PK SUB_CATEGORIA
			
			DROP TABLE IF EXISTS #TMP_PK_SUB_CATEGORIA

			CREATE TABLE #TMP_PK_SUB_CATEGORIA (SUB_CATEGORIA VARCHAR(50), ID_SUB_CATEGORIA INT)
			INSERT INTO #TMP_PK_SUB_CATEGORIA 
			VALUES  ('Bookcases'	,1101),
					('Chairs'		,1102),
					('Tables'		,1103),
					('Furnishings'	,1104),
					('Labels'		,1201),
					('Storage'		,1202),
					('Art'			,1203),
					('Binders'		,1204),
					('Appliances'	,1205),
					('Paper'		,1206),
					('Envelopes'	,1207),
					('Fasteners'	,1208),
					('Supplies'		,1209),
					('Phones'		,1301),
					('Accessories'	,1302),
					('Machines'		,1303),
					('Copiers'		,1304);
			GO




---	TMP DE EXTRACAO

			DROP TABLE IF EXISTS #TMP_EXTR_STORE

			SELECT DISTINCT
					 EXTR.ROW_ID															AS ID_LINHA
					,EXTR.ORDER_ID															AS SKU_PEDIDO_LEGADO
					,CAST(EXTR.ORDER_DATE AS DATE)											AS DATA_PEDIDO
					,CAST(EXTR.SHIP_DATE  AS DATE)											AS DATA_ENTREGA
					,EXTR.SHIP_MODE															AS TIPO_ENTREGA
					,EXTR.CUSTOMER_ID														AS SKU_CLIENTE_LEGADO
					,EXTR.CUSTOMER_NAME														AS NOME_CLIENTE
					,EXTR.SEGMENT															AS SEGMENTO
					,EXTR.COUNTRY															AS PAIS
					,EXTR.CITY																AS CIDADE
					,EXTR.STATE																AS ESTADO
					,EXTR.POSTAL_CODE														AS ID_POSTAL
					,EXTR.REGION															AS REGIAO
					,EXTR.PRODUCT_ID														AS SKU_PRODUTO_LEGADO
					,EXTR.CATEGORY															AS CATEGORIA
					,EXTR.SUB_CATEGORY														AS SUB_CATEGORIA
					,EXTR.PRODUCT_NAME														AS NOME_PRODUTO
					,EXTR.SALES																AS VENDAS
					,EXTR.QUANTITY															AS QUANTIDADE
					,EXTR.DISCOUNT															AS DESCONTO  
					,EXTR.PROFIT															AS LUCRO
					,ROUND((EXTR.SALES/(EXTR.QUANTITY*(1-EXTR.DISCOUNT))),2)				AS PRECO_PRODUTO
					,ROUND(((EXTR.SALES/EXTR.QUANTITY)-(EXTR.PROFIT/EXTR.QUANTITY)),2)		AS CUSTO_PRODUTO
					,CATE.ID_SUB_CATEGORIA
					,CASE EXTR.CATEGORY
						WHEN	'Furniture'			THEN 1100
						WHEN	'Office Supplies'	THEN 1200
						WHEN	'Technology'		THEN 1300
					END AS ID_CATEGORIA
				INTO #TMP_EXTR_STORE

				FROM OLTP.TABE_EXTR_SUPERSTORE EXTR
				INNER JOIN #TMP_PK_SUB_CATEGORIA CATE ON CATE.SUB_CATEGORIA = EXTR.SUB_CATEGORY 


				GO





				---- TABELA DE CLIENTES   // 793  REGISTROS DISTINTOS
			
				DROP TABLE IF EXISTS #TMP_CLIE; 
				
						WITH CTE_CLIENTE (SKU_CLIENTE_LEGADO, NOME_COMPLETO, NOME_CLIENTE_PRIMEIRO, NOME_CLIENTE_ULTIMO, COD_ID_CLIENTE) AS
						(
							SELECT DISTINCT  
							SKU_CLIENTE_LEGADO
							,NOME_CLIENTE
							,LEFT(NOME_CLIENTE, CHARINDEX(' ', NOME_CLIENTE)) AS NOME_CLIENTE_PRIMEIRO
							,LTRIM(REVERSE(LEFT(REVERSE(NOME_CLIENTE), CHARINDEX(' ', REVERSE(NOME_CLIENTE))))) AS NOME_CLIENTE_ULTIMO
							,LTRIM(REVERSE(LEFT(REVERSE(SKU_CLIENTE_LEGADO), CHARINDEX('-', REVERSE(SKU_CLIENTE_LEGADO))))) AS COD_ID_CLIENTE

							FROM #TMP_EXTR_STORE
						)
						
							SELECT 
							SKU_CLIENTE_LEGADO, 
							NOME_COMPLETO, 
							NOME_CLIENTE_PRIMEIRO, 
							NOME_CLIENTE_ULTIMO,
							(CAST(COD_ID_CLIENTE AS INT) * -1) AS COD_ID_CLIENTE
							INTO #TMP_CLIE
							FROM CTE_CLIENTE 


							SELECT MAX(COD_ID_CLIENTE) AS MAX_ID_CLIENTE FROM #TMP_CLIE   ---- 21925
							SELECT DISTINCT COD_ID_CLIENTE FROM #TMP_CLIE --- CADA CÓDIGO DO ID CLIENTE É UNICO 			
				GO

				
				INSERT INTO OLTP.TABE_CLIENTE ( SKU_CLIENTE_LEGADO, NOME_CLIENTE_PRIMEIRO, NOME_CLIENTE_ULTIMO, NOME_CLIENTE_COMPLETO, SEGMENTO)
				SELECT DISTINCT  B.SKU_CLIENTE_LEGADO, B.NOME_CLIENTE_PRIMEIRO, B.NOME_CLIENTE_ULTIMO, B.NOME_COMPLETO, A.SEGMENTO
				FROM #TMP_EXTR_STORE A 
				INNER JOIN #TMP_CLIE B ON A.SKU_CLIENTE_LEGADO = B.SKU_CLIENTE_LEGADO

				MERGE OLTP.TABE_CLIENTE AS CLIE
					USING   (
						SELECT SKU_CLIENTE_LEGADO, CONCAT(LEFT(NOME_CLIENTE_PRIMEIRO,1),LEFT(NOME_CLIENTE_ULTIMO,1),'-',ID_CLIENTE) AS  SKU_CLIENTE
						FROM  OLTP.TABE_CLIENTE
							)  AS CLT  
					ON CLIE.SKU_CLIENTE_LEGADO = CLT.SKU_CLIENTE_LEGADO
				WHEN MATCHED THEN
				UPDATE
					SET CLIE.SKU_CLIENTE = CLT.SKU_CLIENTE  ;

				GO

				 --- TABELA DE PRODUTOS  //  --- 1894 produtos distintos


				 DROP TABLE IF EXISTS #TMP_PROD;

				 WITH CTE_PRODUTO (SKU_PRODUTO_LEGADO, NOME_PRODUTO, CUSTO_PRODUTO, PRECO_PRODUTO, CATEGORIA, SUB_CATEGORIA, COD_STR_CATEGORIA, COD_STR_SUB_CATEGORIA, COD_ID_PRODUTO, ID_CATEGORIA) AS
																														   
						(
						SELECT  
							 SKU_PRODUTO_LEGADO
							,NOME_PRODUTO
							,CUSTO_PRODUTO
							,PRECO_PRODUTO
							,CATEGORIA
							,SUB_CATEGORIA
							,LEFT(UPPER(CATEGORIA),3)																			AS COD_STR_CATEGORIA
							,LEFT(UPPER(SUB_CATEGORIA),2)																		AS COD_STR_SUB_CATEGORIA
							,LTRIM(REVERSE(LEFT(REVERSE(SKU_PRODUTO_LEGADO), CHARINDEX('-', REVERSE(SKU_PRODUTO_LEGADO)))))		AS COD_ID_PRODUTO
							,ID_CATEGORIA
							
							FROM #TMP_EXTR_STORE					
						)																			 
																									 
						SELECT 
							 SKU_PRODUTO_LEGADO
							,NOME_PRODUTO
							,ROUND(AVG(CUSTO_PRODUTO),2)			AS CUSTO_PRODUTO
							,PRECO_PRODUTO
							,CATEGORIA
							,SUB_CATEGORIA
							,COD_STR_CATEGORIA
							,COD_STR_SUB_CATEGORIA
							,(CAST(COD_ID_PRODUTO AS INT) * -1)		AS COD_ID_PRODUTO
							,ID_CATEGORIA

							INTO #TMP_PROD

							FROM CTE_PRODUTO 
							GROUP BY SKU_PRODUTO_LEGADO, NOME_PRODUTO, PRECO_PRODUTO, CATEGORIA, SUB_CATEGORIA, COD_STR_CATEGORIA, COD_STR_SUB_CATEGORIA, COD_ID_PRODUTO, ID_CATEGORIA
						

							INSERT  INTO OLTP.TABE_PRODUTO
							SELECT 
								 NULL AS SKU_PRODUTO
								,SKU_PRODUTO_LEGADO
								,NOME_PRODUTO
								,CUSTO_PRODUTO
								,PRECO_PRODUTO
								,ID_CATEGORIA AS IDCATEGORIA
							FROM #TMP_PROD
								
					

							MERGE OLTP.TABE_PRODUTO  AS STGPROD
								USING  (
									SELECT A.SKU_PRODUTO_LEGADO,  CONCAT(B.COD_STR_CATEGORIA,'-', B.COD_STR_SUB_CATEGORIA,'-', A.ID_PRODUTO) AS SKU_PROD
									FROM OLTP.TABE_PRODUTO	AS A  
									INNER JOIN #TMP_PROD	AS B
									ON A.SKU_PRODUTO_LEGADO = B.SKU_PRODUTO_LEGADO
										) AS TMPPRD
									ON STGPROD.SKU_PRODUTO_LEGADO = TMPPRD.SKU_PRODUTO_LEGADO
							WHEN MATCHED THEN
							UPDATE
								SET STGPROD.SKU_PRODUTO = TMPPRD.SKU_PROD;

				GO	


				--- TABELA DE CATEGORIA

				INSERT INTO OLTP.TABE_CATEGORIA (ID_CATEGORIA, CATEGORIA)
				SELECT DISTINCT ID_CATEGORIA, CATEGORIA FROM #TMP_EXTR_STORE

				GO
				
				--- TABELA DE SUBCATEGORIA
				
				INSERT INTO OLTP.TABE_SUB_CATEGORIA (ID_SUB_CATEGORIA, SUB_CATEGORIA, IDCATEGORIA)
				SELECT DISTINCT ID_SUB_CATEGORIA, SUB_CATEGORIA, ID_CATEGORIA  FROM #TMP_EXTR_STORE

				GO

				--- TABELA DE ENDERECO

				INSERT INTO OLTP.TABE_ENDERECO (PAIS, ESTADO, CIDADE, REGIAO, IDCLIENTE)
				SELECT DISTINCT EXTR.PAIS, EXTR.ESTADO, EXTR.CIDADE, EXTR.REGIAO, CLIE.ID_CLIENTE FROM #TMP_EXTR_STORE EXTR
				INNER JOIN OLTP.TABE_CLIENTE CLIE
				ON EXTR.SKU_CLIENTE_LEGADO = CLIE.SKU_CLIENTE_LEGADO 


				GO

				--- TABE NOTA FISCAL // 5009 NOTAS DISTINTAS 
				
				INSERT  INTO OLTP.TABE_NOTA_FISCAL (SKU_PEDIDO_LEGADO, PRECO_TOTAL, DESCONTO_NOTA,  PRECO_ANTES_DESCONTO, DATA_PEDIDO,  ANO_MES_NOTA, DATA_ENTREGA, TIPO_ENTREGA, IDCLIENTE)
				SELECT DISTINCT  EXTR.SKU_PEDIDO_LEGADO 
								,SUM(EXTR.QUANTIDADE*(EXTR.PRECO_PRODUTO*(1-EXTR.DESCONTO)))												AS PRECO_TOTAL 
								,SUM(1-(EXTR.QUANTIDADE*(EXTR.PRECO_PRODUTO*(1-EXTR.DESCONTO)))/(EXTR.QUANTIDADE*EXTR.PRECO_PRODUTO))		AS DESCONTO_NOTA
								,SUM(EXTR.QUANTIDADE*EXTR.PRECO_PRODUTO)																	AS PRECO_ANTES_DESCONTO
								,EXTR.DATA_PEDIDO
								,CONCAT(LEFT(DATA_PEDIDO,4),SUBSTRING(CAST(DATA_PEDIDO AS varchar(10)),6,2))								AS ANO_MES_NOTA
								,EXTR.DATA_ENTREGA
								,EXTR.TIPO_ENTREGA
								,CLIE.ID_CLIENTE																							AS IDCLIENTE


				FROM #TMP_EXTR_STORE				EXTR
				INNER JOIN 
				OLTP.TABE_CLIENTE					CLIE
				ON CLIE.SKU_CLIENTE_LEGADO = EXTR.SKU_CLIENTE_LEGADO
				


				GROUP BY	EXTR.SKU_PEDIDO_LEGADO 
						 ,EXTR.DATA_PEDIDO
						 --,ANO_MES
						 ,EXTR.DATA_ENTREGA 
						 ,EXTR.TIPO_ENTREGA 
						 ,CLIE.ID_CLIENTE

			GO

				--- TABE ITEM NOTA

				INSERT INTO OLTP.TABE_ITEM_NOTA (SKU_PEDIDO_LEGADO, QUANTIDADE, PRECO_PRODUTO, DESCONTO, IDPRODUTO, IDNOTA)
				SELECT DISTINCT  EXTR.SKU_PEDIDO_LEGADO
								,EXTR.QUANTIDADE
								,EXTR.PRECO_PRODUTO
								,EXTR.DESCONTO
								,PROD.ID_PRODUTO
								,NOTA.ID_NOTA				AS IDNOTA

				FROM #TMP_EXTR_STORE					EXTR
				INNER JOIN OLTP.TABE_PRODUTO			PROD
				ON EXTR.SKU_PRODUTO_LEGADO = PROD.SKU_PRODUTO_LEGADO
				INNER  JOIN OLTP.TABE_NOTA_FISCAL		NOTA
				ON EXTR.SKU_PEDIDO_LEGADO = NOTA.SKU_PEDIDO_LEGADO

				ALTER TABLE OLTP.TABE_ITEM_NOTA
				ADD	SUB_TOTAL	AS (QUANTIDADE * (PRECO_PRODUTO*(1-DESCONTO)))

				GO